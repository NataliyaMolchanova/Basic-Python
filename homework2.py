# 1. Создать список и заполнить его элементами различных типов данных. Реализовать скрипт проверки типа данных
# каждого элемента. Использовать функцию type() для проверки типа. Элементы списка можно не запрашивать у пользователя,
# а указать явно, в программе.
#
# a = ['f', 'd', 22, 33.55, set([1, 2]), {'f', 'd'}]
# for element in a:
#     print(type(element))
#

# 2. Для списка реализовать обмен значений соседних элементов, т.е. Значениями обмениваются элементы
# с индексами 0 и 1, 2 и 3 и т.д. При нечетном количестве элементов последний сохранить на своем месте.
# Для заполнения списка элементов необходимо использовать функцию input().

# list = input('Введите любые данные через пробел ')
# list = list.split( )
#
# for i in range(0, len(list)-1, 2):
#     list[i], list[i+1] = list[i+1], list[i]
#
# print(list)


# 3. Пользователь вводит месяц в виде целого числа от 1 до 12. Сообщить к какому времени года относится месяц
# (зима, весна, лето, осень). Напишите решения через list и через dict.

# через list
# winter = [12, 1, 2]
# spring = [3, 4, 5]
# summer = [6, 7, 8]
# autumn = [9, 10, 11]
#
# print('Узнайте к какому времени года относится месяц.')
# month = int(input('Введите номер месяца от 1 до 12, где 1 — январь, 12 — декабрь: '))
#
# if month in winter:
#     print('Это зимний месяц')
# elif month in spring:
#     print('Это весенний месяц')
# elif month in summer:
#     print('Это летний месяц')
# elif month in autumn:
#     print('Это осенний месяц')
# else:
#     print('Введите номер месяца от 1 до 12')

# через dict
# month_dict = {1: 'Зима', 2: 'Зима', 3: 'Весна', 4: 'Весна', 5: 'Весна', 6: 'Лето', 7: 'Лето', 8: 'Лето', 9: 'Осень',
# 10: 'Осень', 11: 'Осень', 12: 'Зима'}
#
# print('Узнайте к какому времени года относится месяц.')
# i = int(input('Введите номер месяца от 1 до 12, где 1 — январь, 12 — декабрь: '))
# print(month_dict.get(i))


# 4. Пользователь вводит строку из нескольких слов, разделённых пробелами. Вывести каждое слово с новой строки.
# Строки необходимо пронумеровать. Если в слово длинное, выводить только первые 10 букв в слове.

# list = input('Введите слова через пробел: ')
# list = list.split(' ')
#
# for index, word in enumerate(list):
#     print(index + 1, word[:10])


# 5. Реализовать структуру «Рейтинг», представляющую собой не возрастающий набор натуральных чисел. У пользователя
# необходимо запрашивать новый элемент рейтинга. Если в рейтинге существуют элементы с одинаковыми значениями, то
# новый элемент с тем же значением должен разместиться после них.
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

# my_list = [6, 8, 3, 9, 4]
# new_item = int(input('Введите целое число:'))
# my_list.append(new_item)
# my_list.sort(reverse=True)
# print('Пользователь ввел число', (new_item),'.', 'Результат: ', (my_list))

# 6. * Реализовать структуру данных «Товары». Она должна представлять собой список кортежей.
# Каждый кортеж хранит информацию об отдельном товаре. В кортеже должно быть два элемента — номер товара
# и словарь с параметрами (характеристиками товара: название, цена, количество, единица измерения). Структуру
# нужно сформировать программно, т.е. запрашивать все данные у пользователя.
# Пример готовой структуры:
# [
#
# (1, {“название”: “компьютер”, “цена”: 20000, “количество”: 5, “eд”: “шт.”}),
# (2, {“название”: “принтер”, “цена”: 6000, “количество”: 2, “eд”: “шт.”}),
# (3, {“название”: “сканер”, “цена”: 2000, “количество”: 7, “eд”: “шт.”})
#
# ]
# Необходимо собрать аналитику о товарах. Реализовать словарь, в котором каждый ключ — характеристика товара,
# например название, а значение — список значений-характеристик, например список названий товаров.
# Пример:
# {
#
# “название”: [“компьютер”, “принтер”, “сканер”],
# “цена”: [20000, 6000, 2000],
# “количество”: [5, 2, 7],
# “ед”: [“шт.”]
#
# }
# my_catalog = []
# while True:
#     user_inputs = input('Добавить еще товар да/нет: ')
#     if user_inputs == 'да':
#         my_dict = dict({'Название товара': input("Название товара: "), 'цена': input('Цена: '),
#                         'Количество': input('Количество: '), 'ед': input('Единица измерения: '),
#                         })
#         my_catalog.append((len(my_catalog)+1, my_dict))
#     elif user_inputs == 'нет':
#         break
#     else:
#         user_inputs = input('Добавить еще товар да/нет: ')
# print(my_catalog)

# Аналитику логически я бы делала так: собрала бы 4 словаря (в соответствие с ключом) и записывала
# бы в них значения ключа.